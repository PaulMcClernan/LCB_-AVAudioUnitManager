library community.appleavaucomponentmanager.paulmcclernan

use com.livecode.engine
use com.livecode.foreign
use com.livecode.objc
use com.livecode.array
use com.livecode.list
use com.livecode.byte
use com.livecode.date
use com.livecode.binary
use com.livecode.bitwise
use com.livecode.string

metadata version is "0.6"
metadata author is "Paul McClernan"
metadata title is "Apple AVAudioSampler library"
metadata svgicon is "M66.43,52.07c-0.71,0.32-1.48,0.56-2.31,0.78c-2.35,0.65-5.44,0.04-5.44,0.04l-8.52,9.56c0,0,11.03,11.58,13.36,13.92 s4.02,6.19,4.02,6.19l8.77-19.76C76.31,62.8,67.18,58.92,66.43,52.07z M56.35,86.86c-2.83-2.4-16.4-15.09-16.4-15.09L21.22,90.12c0,0,3.25,1.93,5.41,1.86c5.6-0.17,10.48-3.77,15.46-3.77 c4.58,0,8.99,3.52,15.56,3.77c1.55,0.06,2.88-0.35,4.41-1.24c0.7-0.41,2.02-1.54,2.02-1.54S59.18,89.26,56.35,86.86z M52.45,18.42c5.85-5.85,5.42-15.63,5.42-15.63s-8.65,0.97-13.34,6.82c-5.22,6.51-5.07,13.39-4.94,14.51 C44.49,24.13,48.71,22.16,52.45,18.42z M18.38,48.03c-3.59,0.27-3.23,4.28-3.21,4.45l0.03,0.32l-0.23,0.23l-5.54,5.89l-5.85-5.95l8.91,24.95l18.58-18.16l-8.8-9.83 C22.28,49.93,19.79,47.92,18.38,48.03z M9.98,39.65c0,0,1.4-2.6,5.19-5.27c2.15-1.51,4.69-2.88,7.45-3.52c1.75-0.41,3.72-0.62,5.86-0.62 c3.63,0,9.12,1.35,9.12,1.35l-10.85,4.24c-1.77,0.8-2.58,2.62-2.85,3.38l14.4,13.75c3.71-3.62,6.78-6.15,9.99-9.57 c-0.51-4.23,0.89-8.11,3.22-10.81c4.73-5.48,13.47-2.78,13.47-2.78l-3.55,3.05c0,0-4.13,3.16-3.01,6.79 c0.27,0.87,0.84,2.34,2.44,3.17c0.93,0.48,4.09,0.37,5.6-0.95C68.48,40.1,70.45,38,70.45,38s0.88-1.54,1.8-2.43 c1.11-1.08,3.56-2.91,3.56-2.91s-4.82-5.38-8.14-6.83c-2.91-1.27-6.15-1.89-9.71-1.91c-7.4-0.03-12.83,4.65-16.7,4.35 c-3.19-0.25-9.47-4.38-14.6-4.35c-7.22,0.05-13.04,2.44-17.47,7.33C5.44,35.37,4,45.11,4,45.11l1.89-1.93c0,0,2.98-0.11,3.34-0.41 c1.48-1.24,1.31-2.33,1.31-2.33L9.98,39.65z M18.15,46.11c1.68-0.19,4.88,2.09,4.88,2.09l9.22,10.03l4.11-3.86L21.75,39.42l0.13-0.52c0.03-0.14,0.88-3.49,3.9-4.84 l5.18-2.02c-1.95-0.07-5.6-0.11-7.97,0.42c-3.26,0.74-8.73,4.32-10.78,7.04c0.06,0.17,0.09,0.34,0.1,0.53 c0.08,1.49-1.41,3.45-2.02,3.98c-0.73,0.63-2.55,1.03-3.63,1.21l-3.94,3.94l6.59,6.6l3.85-3.86c-0.04-1.6,0.45-3.4,1.78-4.57 C15.67,46.71,16.48,46.3,18.15,46.11z M70.95,39.93c-0.62,0.44-4.18,6.07-9.58,4.98c-2.9-0.58-4.65-3.5-4.92-5.3c-0.6-4.07,1.8-6.16,3.56-7.69 c0.59-0.52,1.6-1.31,1.6-1.31s-6.16-0.73-9.16,3.5c-3.98,5.61-1.98,9.83-1.98,9.83S13.22,80.66,12.03,81.82 c-0.09,0.56-0.5,3.71,0.93,5.31c1.56,1.74,3.06,2.79,5.34,2.24c1.3-0.32,39.44-38.44,39.44-38.44s3.65,0.56,5.67,0.07 C68.3,49.8,70.71,46.32,70.95,39.93z M65.52,84.81c-0.14,0.85-0.52,1.48-1.2,1.99c-0.5,0.41-1.12,0.62-1.88,0.62c-2.8,0-6.23-3.51-6.24-3.52L41.82,70.25 l6.44-6.55c0,0,13.44,13.7,14.11,14.36C63.03,78.73,65.79,83.22,65.52,84.81z"
---------------------------------------------------------------------------------------------------------------------------
public foreign type AudioComponentDescription binds to "MCAggregateTypeInfo:jjjjj" -- 5x OSType/UInt32s

private foreign handler objC_NSURLURLWithString(in pURLString as ObjcId) returns ObjcId binds to "objc:NSURL.+URLWithString:"
private foreign handler objC_NSURLfileOrDirURLWithPath(in pPathString as ObjcId, in pIsDir as CBool) returns ObjcId binds to "objc:.NSURL.+fileURLWithPath:isDirectory:"
private foreign handler objC_NSURLfileURLWithPath(in pPathString as ObjcId) returns ObjcId binds to "objc:NSURL.+fileURLWithPath:"
private foreign handler objC_NSErrorAlloc() returns ObjcId binds to "objc:NSError.+alloc"
private foreign handler objC_NSObjectRetain(in pNSObj as ObjcId) returns ObjcId binds to "objc:NSObject.-retain"
private foreign handler objC_NSObjectAutoRealease(in pNSObj as ObjcId) returns ObjcId binds to "objc:NSObject.-autorelease"
private foreign handler objC_NSObjectRelease(in pNSObj as ObjcId) returns nothing binds to "objc:NSObject.-release"

private foreign handler objC_NSMutableArrayAlloc() returns ObjcRetainedId binds to "objc:NSMutableArray.+alloc"
private foreign handler objC_NSMutableArrayInitWithCapacity(in pNSMutableArray as ObjcId, in pCapacity as NaturalFloat) returns ObjcId binds to "objc:NSMutableArray.-initWithCapacity:"
private foreign handler objC_NSMutableArrayInitWithNSArray(in pNSMutableArray as ObjcId, in pNSArray as ObjcId) returns ObjcId binds to "objc:NSMutableArray.-initWithArray:"
public foreign handler ObjC_NSArrayAlloc() returns ObjcRetainedId binds to "objc:NSArray.+alloc"
public foreign handler ObjC_NSArrayComponentsJoinedByString(in pObj as ObjcId, in pSeperator as ObjcId) returns ObjcId binds to "objc:NSArray.-componentsJoinedByString:"

private foreign handler c_CFErrorCopyDescription(in pCFErrorRef as ObjcId) returns ObjcId binds to "c:CFErrorCopyDescription"

private foreign handler objC_AVAudioUnitAUComponent() returns ObjcId binds to "objc:AVAudioUnitComponentManager.+alloc"
private foreign handler objC_AVAudioUnitAUComponentManager() returns ObjcId binds to "objc:AVAudioUnitComponentManager.+sharedAudioUnitComponentManager"
private foreign handler objC_AVAudioUnitGetAudioUnitsFromACDesc(in pSharedAudioUnitComponentManager as ObjcId, in pAudioComponentDescription as AudioComponentDescription) returns ObjcId \
                        binds to "objc:AVAudioUnitComponentManager.-componentsMatchingDescription:"
private foreign handler objC_AVAudioUnitGetACDescription(in pAVAUSampler as ObjcId) returns AudioComponentDescription binds to "objc:AVAudioUnitComponentManager.audioComponentDescription"
private foreign handler objC_AVAudioUnitGetName(in pAVAudioUnit as ObjcId) returns ObjcId binds to "objc:AVAudioUnit.name"
private foreign handler objC_AVAudioUnitGetManufacturer(in pAVAUSampler as ObjcId) returns ObjcId binds to "objc:AVAudioUnit.manufacturerName"
private foreign handler objC_AVAudioUnitGetVersion(in pAVAUSampler as ObjcId) returns UInt64 binds to "objc:AVAudioUnit.version"
private foreign handler objC_AVAudioUnitGetAudioUnit(in pAVAUSampler as ObjcId) returns ObjcId binds to "objc:AVAudioUnit.audioUnit"
-- private foreign handler objC_AVAudioUnitGetAUAudioUnit(in pAVAUSampler as ObjcId) returns ObjcId binds to "objc:AVAudioUnit.AUAudioUnit" -- macOS 10.11+ only

private foreign handler c_AudioUnitUninitialize(in pAVAUSampler as ObjcId) returns CSInt binds to "c:AudioUnit.framework>AudioUnitUninitialize"
private foreign handler c_AudioUnitInitialize(in pAVAUSampler as ObjcId) returns CSInt binds to "c:AudioUnit.framework>AudioUnitInitialize"
private foreign handler c_AudioUnitGetProperty(in pAudioUnit as ObjcId,in pPropertyID as UInt32,in pScope as UInt32, in pElement as UInt32, \
                                       out rData as Data, out rDataSize as UInt32) returns CSInt binds to "c:AudioUnit.framework>AudioUnitGetProperty"

private foreign handler objC_AVAudioUnitComponentGetComponent(in pAVAUSampler as ObjcId) returns any binds to "objc:AVAudioUnitComponent.audioComponent"
private foreign handler objC_AVAudioUnitComponentHasCustomView(in pAVAUSampler as ObjcId) returns CBool binds to "objc:AVAudioUnitComponent.hasCustomView"

constant kAudioUnitType_MusicDevice is 1635085685 -- 'umua' reversed for Intel, PowerPC would be 1970107745 -- "aumu"
constant kAudioUnitSubType_Sampler is 1935764848 -- 'pmas' reversed for Intel, PowerPC would be 1886216563 -- "samp"
constant kAudioUnitSubType_DLSSynth is  1684828960 -- ' sld' reversed for Intel, PowerPC would be 544435300 --"dls "
constant kAudioUnitSubType_MIDISynth is 1836284270 -- 'nysm' reversed for Intel, PowerPC would be 1853453165 --"msyn"
constant kAudioUnitManufacturer_Apple is 1634758764 -- 'lppa' reversed for Intel, PowerPC would be 1819308129 -- "appl"
constant kAudioUnitType_Output is 1635086197 -- "uoua" reversed for Intel, PowerPC would be 1970238817 -- "auou"
constant kAudioUnitSubType_RemoteIO is 1919512419 -- "coir" reversed for Intel, PowerPC would be 1668245874 -- "rioc"

public handler NSArrayToString(in pNSArray as ObjcObject) returns String
  variable tNSArray as ObjcObject
  variable tNSString as ObjcObject
  variable tStr as String

  put "\n" into tStr
  unsafe
    put ObjC_NSArrayComponentsJoinedByString(pNSArray, StringToNSString(tStr)) into tNSString
  end unsafe

  return StringFromNSString(tNSString)
end handler

private handler getAudioComponentDescriptionCharCode(in pConstant as Number) returns String
   if pConstant is 1635085685 then
      return "aumu"
   else if pConstant is 1935764848 then
      return "samp"
   else if pConstant is 1684828960 then
      return "dls "
   else if pConstant is 1836284270 then
      return "msyn"
   else if pConstant is 1634758764 then
      return "appl"
   else if pConstant is 1635086197 then
      return "auou"
   else if pConstant is 1919512419 then
      return "rioc"
   end if
end handler
private handler getAudioComponentDescriptionCharCodeNum(in pFourCharCode as String) returns Number
   if pFourCharCode is "aumu" then
      return 1635085685
   else if pFourCharCode is "samp" then
      return 1935764848
   else if pFourCharCode is "dls " then
      return 1684828960
   else if pFourCharCode is "msyn"  then
      return 1836284270
   else if pFourCharCode is "appl"  then
      return 1634758764
   else if pFourCharCode is "auou" then
      return 1635086197
   else if pFourCharCode is "rioc" then
      return 1919512419
   end if
end handler

public handler AVAudioUnitCMGetUnits() returns optional any
   -- variable tAudioComponentDescription as optional AudioComponentDescription
   variable tAudioComponentDescription as optional AudioComponentDescription
   variable tAVAudioUnitsManagerInstance as optional ObjcObject
   variable tMatchingtAudioUnitsNSArray as optional ObjcObject
   variable tMatchingtAudioUnitsList as optional List
   variable tAudioUnit as optional ObjcObject
   variable tTempNSStr as optional ObjcObject
   variable tTempStr as optional String

   variable tComponentType as UInt32
   variable tComponentSubType as UInt32
   variable tComponentManufacturer as UInt32
   variable tComponentFlags as UInt32
   variable tComponentFlagsMask as UInt32

   unsafe
   put objC_AVAudioUnitAUComponentManager() into tAVAudioUnitsManagerInstance
   put [0,0,0,0,0] into tAudioComponentDescription
   -- log tAVAudioUnitsManagerInstance
   -- AudioComponentDescription feilds are componentType,componentSubType,componentManufacturer,componentFlags = 0,componentFlagsMask = 0
   -- For searching for AudioUnits, any feilds with 0 are wildcards
   -- put 0 into tComponentType
   -- put tComponentType into element 1 of tAudioComponentDescription
   -- put 0 into tComponentSubType
   -- put tComponentSubType into tAudioComponentDescription[2]

   -- put getAudioComponentDescriptionCharCodeNum("appl") into tAudioComponentDescription[3] -- componentManufacturer
   -- put 0 into tComponentManufacturer
   -- put tComponentManufacturer into tAudioComponentDescription[3]
   -- put 0 into tComponentFlags
   -- put tComponentType into tAudioComponentDescription[4]
   -- put 0 into tComponentFlagsMask
   -- put tComponentFlagsMask into tAudioComponentDescription[5]

   put objC_AVAudioUnitGetAudioUnitsFromACDesc(tAVAudioUnitsManagerInstance,tAudioComponentDescription) into tMatchingtAudioUnitsNSArray
   -- log tMatchingtAudioUnitsNSArray
   put ListFromNSArray(tMatchingtAudioUnitsNSArray) into tMatchingtAudioUnitsList
   -- log tMatchingtAudioUnitsList
   put "" into tTempStr
   repeat for each element tAudioUnit in tMatchingtAudioUnitsList
      put objC_AVAudioUnitGetName(tAudioUnit) into tTempNSStr
      if tTempNSStr is not nothing then
         put StringFromNSString(tTempNSStr) &"\n" after tTempStr
         -- log tTempStr
      else
         put "UNNAMED \n" after tTempStr
      end if
   end repeat
      -- put objC_AVAudioUnitGetName(sAVAudioUnitMIDIInstrument) into tNSStrObj
      -- put StringFromNSString(tNSStrObj) into tStr
      -- put "Name: " & tStr & newline into tInfoChunk
      -- put objC_AVAudioUnitGetManufacturer(sAVAudioUnitMIDIInstrument)into tNSStrObj
      -- put StringFromNSString(tNSStrObj) into tStr
      -- put "Manufacturer: " & tStr & newline after tInfoChunk
      -- put objC_AVAudioUnitGetVersion(sAVAudioUnitMIDIInstrument) into tNumber -- NaturalUInt
      -- put "Version: " & tNumber formatted as string & newline after tInfoChunk
      -- put objC_AVAudioNodeGetNumberOfInputs(sAVAudioUnitMIDIInstrument) into tNumber
      -- put "Inputs: " & tNumber formatted as string & newline after tInfoChunk
      -- put objC_AVAudioNodeGetNumberOfOutputs(sAVAudioUnitMIDIInstrument) into tNumber
      -- put "Outputs: " & tNumber formatted as string & newline after tInfoChunk
      -- put objC_AVAudioUnitGetACDescription(sAVAudioUnitMIDIInstrument) into tAudioComponentDescription
      -- put "AudioComponentDescription: " after tInfoChunk

      -- put getAudioComponentDescriptionCharCode(element 1 of tAudioComponentDescription) after tInfoChunk
      -- put element 1 of tAudioComponentDescription formatted as string after tInfoChunk
   end unsafe
   -- Name: AUSampler
   -- Manufacturer: Apple
   -- Version: 65536
   -- Inputs: 0
   -- Outputs: 1
   -- AudioComponentDescription: aumu,samp,appl,0,0
   return tTempStr
   -- return NSArrayToString(tMatchingtAudioUnitsNSArray)
end handler

end library
